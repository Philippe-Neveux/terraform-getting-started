# data.aws_ssm_parameter.amzn2_linux:
data "aws_ssm_parameter" "amzn2_linux" {
    arn             = "arn:aws:ssm:eu-west-3::parameter/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    id              = "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    insecure_value  = "ami-08eb3709ee2c1ccd6"
    name            = "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    type            = "String"
    value           = (sensitive value)
    version         = 130
    with_decryption = true
}

# aws_instance.nginx1:
resource "aws_instance" "nginx1" {
    ami                                  = "ami-08eb3709ee2c1ccd6"
    arn                                  = "arn:aws:ec2:eu-west-3:970547366352:instance/i-0dd6a0f3fccbc41c8"
    associate_public_ip_address          = true
    availability_zone                    = "eu-west-3c"
    cpu_core_count                       = 1
    cpu_threads_per_core                 = 2
    disable_api_stop                     = false
    disable_api_termination              = false
    ebs_optimized                        = false
    get_password_data                    = false
    hibernation                          = false
    host_id                              = [90mnull[0m[0m
    iam_instance_profile                 = [90mnull[0m[0m
    id                                   = "i-0dd6a0f3fccbc41c8"
    instance_initiated_shutdown_behavior = "stop"
    instance_lifecycle                   = [90mnull[0m[0m
    instance_state                       = "running"
    instance_type                        = "t3.micro"
    ipv6_address_count                   = 0
    ipv6_addresses                       = []
    key_name                             = [90mnull[0m[0m
    monitoring                           = false
    outpost_arn                          = [90mnull[0m[0m
    password_data                        = [90mnull[0m[0m
    placement_group                      = [90mnull[0m[0m
    placement_partition_number           = 0
    primary_network_interface_id         = "eni-0153999de17e9cb23"
    private_dns                          = "ip-10-0-0-112.eu-west-3.compute.internal"
    private_ip                           = "10.0.0.112"
    public_dns                           = "ec2-52-47-184-205.eu-west-3.compute.amazonaws.com"
    public_ip                            = "52.47.184.205"
    secondary_private_ips                = []
    security_groups                      = []
    source_dest_check                    = true
    spot_instance_request_id             = [90mnull[0m[0m
    subnet_id                            = "subnet-0ac305e6d3a1f7926"
    tags_all                             = {}
    tenancy                              = "default"
    user_data                            = "7fe76b70f5c71b6ac9ee63589fb10be2010d6a7e"
    user_data_replace_on_change          = false
    vpc_security_group_ids               = [
        "sg-067e198baeb87b685",
    ]

    capacity_reservation_specification {
        capacity_reservation_preference = "open"
    }

    cpu_options {
        amd_sev_snp      = [90mnull[0m[0m
        core_count       = 1
        threads_per_core = 2
    }

    credit_specification {
        cpu_credits = "unlimited"
    }

    enclave_options {
        enabled = false
    }

    maintenance_options {
        auto_recovery = "default"
    }

    metadata_options {
        http_endpoint               = "enabled"
        http_protocol_ipv6          = "disabled"
        http_put_response_hop_limit = 1
        http_tokens                 = "optional"
        instance_metadata_tags      = "disabled"
    }

    private_dns_name_options {
        enable_resource_name_dns_a_record    = false
        enable_resource_name_dns_aaaa_record = false
        hostname_type                        = "ip-name"
    }

    root_block_device {
        delete_on_termination = true
        device_name           = "/dev/xvda"
        encrypted             = false
        iops                  = 100
        kms_key_id            = [90mnull[0m[0m
        tags                  = {}
        tags_all              = {}
        throughput            = 0
        volume_id             = "vol-07868fc5b2a722ddb"
        volume_size           = 8
        volume_type           = "gp2"
    }
}

# aws_internet_gateway.app:
resource "aws_internet_gateway" "app" {
    arn      = "arn:aws:ec2:eu-west-3:970547366352:internet-gateway/igw-09a69fd8f2a3e6e8c"
    id       = "igw-09a69fd8f2a3e6e8c"
    owner_id = "970547366352"
    tags_all = {}
    vpc_id   = "vpc-0b4b7469fecbf124f"
}

# aws_route_table.app:
resource "aws_route_table" "app" {
    arn              = "arn:aws:ec2:eu-west-3:970547366352:route-table/rtb-0ac813a091c5c45e0"
    id               = "rtb-0ac813a091c5c45e0"
    owner_id         = "970547366352"
    propagating_vgws = []
    route            = [
        {
            carrier_gateway_id         = [90mnull[0m[0m
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = [90mnull[0m[0m
            destination_prefix_list_id = [90mnull[0m[0m
            egress_only_gateway_id     = [90mnull[0m[0m
            gateway_id                 = "igw-09a69fd8f2a3e6e8c"
            ipv6_cidr_block            = [90mnull[0m[0m
            local_gateway_id           = [90mnull[0m[0m
            nat_gateway_id             = [90mnull[0m[0m
            network_interface_id       = [90mnull[0m[0m
            transit_gateway_id         = [90mnull[0m[0m
            vpc_endpoint_id            = [90mnull[0m[0m
            vpc_peering_connection_id  = [90mnull[0m[0m
        },
    ]
    tags_all         = {}
    vpc_id           = "vpc-0b4b7469fecbf124f"
}

# aws_route_table_association.app_subnet1:
resource "aws_route_table_association" "app_subnet1" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-03ac778b7ba5c8acb"
    route_table_id = "rtb-0ac813a091c5c45e0"
    subnet_id      = "subnet-0ac305e6d3a1f7926"
}

# aws_security_group.nginx_sg:
resource "aws_security_group" "nginx_sg" {
    arn                    = "arn:aws:ec2:eu-west-3:970547366352:security-group/sg-067e198baeb87b685"
    description            = "Managed by Terraform"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = [90mnull[0m[0m
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-067e198baeb87b685"
    ingress                = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = [90mnull[0m[0m
            from_port        = 80
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 80
        },
    ]
    name                   = "nginx_sg"
    name_prefix            = [90mnull[0m[0m
    owner_id               = "970547366352"
    revoke_rules_on_delete = false
    tags_all               = {}
    vpc_id                 = "vpc-0b4b7469fecbf124f"
}

# aws_subnet.public_subnet1:
resource "aws_subnet" "public_subnet1" {
    arn                                            = "arn:aws:ec2:eu-west-3:970547366352:subnet/subnet-0ac305e6d3a1f7926"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-west-3c"
    availability_zone_id                           = "euw3-az3"
    cidr_block                                     = "10.0.0.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0ac305e6d3a1f7926"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "970547366352"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags_all                                       = {}
    vpc_id                                         = "vpc-0b4b7469fecbf124f"
}

# aws_vpc.app:
resource "aws_vpc" "app" {
    arn                                  = "arn:aws:ec2:eu-west-3:970547366352:vpc/vpc-0b4b7469fecbf124f"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.0.0.0/16"
    default_network_acl_id               = "acl-07c63040b033b7732"
    default_route_table_id               = "rtb-0cd638378d8bd2463"
    default_security_group_id            = "sg-0baf1c03db21aa90b"
    dhcp_options_id                      = "dopt-0a80ab9ee76feef16"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-0b4b7469fecbf124f"
    instance_tenancy                     = "default"
    ipv6_association_id                  = [90mnull[0m[0m
    ipv6_cidr_block                      = [90mnull[0m[0m
    ipv6_cidr_block_network_border_group = [90mnull[0m[0m
    ipv6_ipam_pool_id                    = [90mnull[0m[0m
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-0cd638378d8bd2463"
    owner_id                             = "970547366352"
    tags_all                             = {}
}
